{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Feline\\\\Projects\\\\blog\\\\client\\\\pages\\\\blog\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport axios from 'axios';\nimport fetch from 'node-fetch';\nimport Header from '../../components/header';\nimport BlogHeader from '../../components/BlogHeader';\n\nfunction BlogDetail({\n  blog\n}) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, __jsx(BlogHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, blog.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, blog.author), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, blog.content), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, blog.comment), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, blog.date));\n} // This function gets called at build time\n\n\nexport async function getStaticPaths() {\n  // Call an external API endpoint to get posts\n  const res = await fetch('http://localhost:8000/blogs/list');\n  const posts = await res.json(); // Get the paths we want to pre-render based on posts\n\n  const paths = posts.map(post => ({\n    params: {\n      id: post._id\n    }\n  })); // We'll pre-render only these paths at build time.\n  // { fallback: false } means other routes should 404.\n\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const id = params.id;\n  console.log(id);\n  let blog = null;\n  await axios.get(`http://localhost:8000/blogs/detail?id=${id}`).then(res => {\n    blog = res.data;\n  }).catch(error => {\n    console.log(error);\n  });\n  return {\n    props: {\n      blog\n    }\n  };\n}\nexport default BlogDetail;","map":{"version":3,"sources":["C:/Users/Feline/Projects/blog/client/pages/blog/[id].js"],"names":["axios","fetch","Header","BlogHeader","BlogDetail","blog","title","author","content","comment","date","getStaticPaths","res","posts","json","paths","map","post","params","id","_id","fallback","getStaticProps","console","log","get","then","data","catch","error","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA4B;AAExB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAI,CAACC,KAAV,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,IAAI,CAACE,MAAT,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAI,CAACG,OAAT,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,IAAI,CAACI,OAAT,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,IAAI,CAACK,IAAT,CANJ,CADJ;AAUH,C,CAED;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA,QAAMC,GAAG,GAAG,MAAMX,KAAK,CAAC,kCAAD,CAAvB;AACA,QAAMY,KAAK,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAApB,CAHmC,CAKnC;;AACA,QAAMC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAUC,IAAI,KAAK;AAC/BC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,EAAE,EAAEF,IAAI,CAACG;AAAX;AADuB,GAAL,CAAd,CAAd,CANmC,CAUnC;AACA;;AACA,SAAO;AAAEL,IAAAA,KAAF;AAASM,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD;AAGH,OAAO,eAAeC,cAAf,CAA8B;AAACJ,EAAAA;AAAD,CAA9B,EAAwC;AAC3C,QAAMC,EAAE,GAAGD,MAAM,CAACC,EAAlB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AACA,MAAId,IAAI,GAAG,IAAX;AACA,QAAML,KAAK,CAACyB,GAAN,CAAW,yCAAwCN,EAAG,EAAtD,EACLO,IADK,CACCd,GAAD,IAAO;AACTP,IAAAA,IAAI,GAAGO,GAAG,CAACe,IAAX;AACH,GAHK,EAILC,KAJK,CAIEC,KAAD,IAAS;AACZN,IAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACH,GANK,CAAN;AAQA,SAAO;AACHC,IAAAA,KAAK,EAAC;AACFzB,MAAAA;AADE;AADH,GAAP;AAKH;AAED,eAAeD,UAAf","sourcesContent":["import axios from 'axios'\r\nimport fetch from 'node-fetch'\r\nimport Header from '../../components/header'\r\nimport BlogHeader from '../../components/BlogHeader'\r\n\r\nfunction BlogDetail({blog}) {\r\n\r\n    return (\r\n        <div>\r\n            <BlogHeader />\r\n            <h1>{blog.title}</h1>\r\n            <p>{blog.author}</p>\r\n            <p>{blog.content}</p>\r\n            <p>{blog.comment}</p>\r\n            <p>{blog.date}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n// This function gets called at build time\r\nexport async function getStaticPaths() {\r\n    // Call an external API endpoint to get posts\r\n    const res = await fetch('http://localhost:8000/blogs/list')\r\n    const posts = await res.json()\r\n  \r\n    // Get the paths we want to pre-render based on posts\r\n    const paths = posts.map(post => ({\r\n      params: { id: post._id },\r\n    }))\r\n  \r\n    // We'll pre-render only these paths at build time.\r\n    // { fallback: false } means other routes should 404.\r\n    return { paths, fallback: false }\r\n  }\r\n  \r\n\r\nexport async function getStaticProps({params}) {\r\n    const id = params.id\r\n    console.log(id)\r\n    let blog = null\r\n    await axios.get(`http://localhost:8000/blogs/detail?id=${id}`)\r\n    .then((res)=>{\r\n        blog = res.data\r\n    })\r\n    .catch((error)=>{\r\n        console.log(error)\r\n    })\r\n\r\n    return {\r\n        props:{\r\n            blog\r\n        }\r\n    }\r\n}\r\n\r\nexport default BlogDetail"]},"metadata":{},"sourceType":"module"}